var currentLocation = window.location.href;

function showLoginBox(rurl) {
    var rurl = typeof rurl == 'undefined' ? '' : rurl;
    if (rurl === '') {
        rurl = window.location.href;
    }
    //console.log(rurl);return;
    var url = '/login?inajax=1&' + (rurl == '' ? '' : 'rurl=' + encodeURIComponent(rurl)) + '&_' + new Date().getTime();
    $.fancybox({
        'type': 'ajax',
        'ajax': {'url': url},
        'padding': '0',
        'scrolling': 'no',
        'centerOnScroll': true,
        'overlayOpacity': 0.4,
        'overlayColor': '#000'
    });
}

function logout() {
    $.ajax({
        type: 'GET',
        url: '/login/logout',
        dataType: 'json',
        data: 'inajax=1',
        success: function (resp) {
            if (resp.status > 0) {
                PassportSC.logoutHandle($id('uinfo'), logoutApp, logoutApp);
            } else {
                alert('\u6ce8\u9500\u5931\u8d25');/*注销失败*/
            }
        },
        error: function () {
        }
    });
}

function logoutApp() {
    //top.window.location.href = currentLocation;
    window.location.reload();
}

function _getUser(callback, force) {
    var force = isUndefined(force) ? false : (force ? true : false);
    var user = {uid: 0, nickname: '', short_nickname: '', headimgurl: '', userid: ''};
    if (!isUndefined($.cookie('uid')) && !force && !isUndefined($.cookie('nickname')) && $.cookie('nickname') && !isUndefined($.cookie('short_nickname')) && !isUndefined($.cookie('headimgurl')) && !isUndefined($.cookie('userid'))) {
        user = {
            uid: parseInt($.cookie('uid'), 10),
            nickname: $.cookie('nickname'),
            short_nickname: $.cookie('short_nickname'),
            headimgurl: $.cookie('headimgurl'),
            userid: $.cookie('userid'),
            message_num: $.cookie('message_num'),
            designer_page_url: $.cookie('designer_page_url')
        };
    } else {
        $.ajax({
            type: 'get',
            url: '/user/getUserInfo',
            dataType: 'json',
            success: function (resp) {
                user = resp;
                if (typeof callback == 'function') {
                    callback(resp);
                }
            },
            complete: function () {
            }
        });
    }
    if (typeof callback == 'function' && !force) {
        callback(user);
    }
    //console.log('@@@@@@@@@@@@@@@@@@@@@@');
    //console.log(user);
    return user;
}

jQuery.fn.DefaultValue = function (text) {
    return this.each(function () {
        //Make sure we're dealing with text-based form fields
        if (this.type != 'text' && this.type != 'password' && this.type != 'textarea')
            return;

        //Store field reference
        var fld_current = this;

        //Set value initially if none are specified
        if (text !== undefined) {
            this.value = text;
        } else {
            if (this.defaultValue !== undefined) {
                text = this.defaultValue;
            } else {
                text = '';
                return;
            }
            //Other value exists - ignore
        }

        //Remove values on focus
        $(this).focus(function () {
            if (this.value == text || this.value == '')
                this.value = '';
        });

        //Place values back on blur
        $(this).blur(function () {
            if (this.value == text || this.value == '')
                this.value = text;
        });

        //Capture parent form submission
        //Remove field values that are still default
        $(this).parents("form").each(function () {
            //Bind parent form submit
            $(this).submit(function () {
                if (fld_current.value == text) {
                    fld_current.value = '';
                }
            });
        });
    });
};
(function($){
$(function(){
  'use strict';
  var defaultHandle = {
    timeout: 0,
    dataType: 'json',
    confirm: {
      noConfirm: true,
      title: '确定要执行该操作吗？',
      cancelFunc: function(){}
    },
    formCheck: function() {},
    beforeSerialize: function(form, options){},
    beforeSubmit: function(arr, form, options){},
    success: function(resp, jqXHR, textStatus){},
    error: function(jqXHR, textStatus, errorThrown){},
    complete: function(jqXHR, textStatus){}
  };
	$('form[ajaxform="true"]').each(function(){
		if(!$(this).data('action')) {
			$(this).data('action', $(this).attr('action'));
		}
	});
	$('form[ajaxform="true"][ajaxtype="ajaxform"]').each(function(){
		var _form = $(this);
		if(!$(_form).attr('id')) {
			$(_form).attr('id', 'ajaxform_'+hash((new Date().getTime()).toString(), 8));
		}
		var _formId = $(_form).attr('id');/*表单id*/
		var _submitBtn = $(_form).find('button[type="submit"]');/*提交按钮*/
    //检查表单的 ajaxFormHandle
    var ajaxFormHandle;
    try {
      ajaxFormHandle = eval('ajaxform_handle_'+_formId);
    }catch(e) {
      ajaxFormHandle = {}
    }
    ajaxFormHandle = $.extend(false, {}, defaultHandle, ajaxFormHandle);
		$(_form).ajaxForm({
      dataType: ajaxFormHandle.dataType,
			timeout: ajaxFormHandle.timeout,
      beforeSerialize:function(form, options){
        if(false === ajaxFormHandle.beforeSerialize(form, options)) {
          return false;
        }
      },
			beforeSubmit: function(arr, form, options) {
        if (false === ajaxFormHandle.formCheck()) {
          return false;
        }
				if(false === ajaxFormHandle.beforeSubmit(arr, form, options)) {
          return false;
        }
				$(_submitBtn).attr('disabled', true);
			},
			complete: function(jqXHR, textStatus) {
				$(_form).attr('action',$(_form).data('action'));
				$(_submitBtn).attr('disabled', false);
        ajaxFormHandle.complete(jqXHR, textStatus);
			},
			success: function(resp, jqXHR, textStatus) {
        if ((ajaxFormHandle.dataType).toLowerCase() == 'json') {
          try{resp = JSON.parse(resp)}catch(e){}
          if(typeof resp != 'object' || Object.prototype.toString.call(resp).toLowerCase() != '[object object]') {
            showAlert('响应数据格式不正确');
            return false;
    			}
        }
				ajaxFormHandle.success(resp, jqXHR, textStatus);
			},
			error:function(jqXHR, textStatus, errorThrown) {
        ajaxFormHandle.error(jqXHR, textStatus, errorThrown);
			}
        });
        if ($(_form).attr('onsubmit') && /^\s*return\s+false\s*;\s*$/i.test($(_form).attr('onsubmit'))) {
            $(_form).removeAttr('onsubmit');
        }
	});
	$('form[ajaxform="true"][ajaxtype="ajaxsubmit"]').each(function(){
		var _form = $(this);
		if(!$(_form).attr('id')) {
			$(_form).attr('id', 'ajaxform_'+hash((new Date().getTime()).toString(), 8));
		}
		var _formId = $(_form).attr('id');/*表单id*/
		var _submitBtn = $(_form).find('button[type="submit"]');/*提交按钮*/
    //检查表单的 ajaxFormHandle
    var ajaxFormHandle;
    try {
      ajaxFormHandle = eval('ajaxform_handle_'+_formId);
    }catch(e) {
      ajaxFormHandle = {}
    }
    ajaxFormHandle = $.extend(false, {}, defaultHandle, ajaxFormHandle);
		$(_form).submit(function(e){
      e.preventDefault(); // prevent native submit
			var postform = function(options) {
				$(_form).ajaxSubmit({
          dataType: options.dataType,
    			timeout: options.timeout,
          beforeSerialize:function(form, options){
            if(false === options.beforeSerialize(form, options)) {
              return false;
            }
          },
    			beforeSubmit: function(arr, form, options) {
    				if(false === options.beforeSubmit(arr, form, options)) {
              return false;
            }
    				$(_submitBtn).attr('disabled', true);
    			},
    			complete: function(jqXHR, textStatus) {
    				$(_form).attr('action',$(_form).data('action'));
    				$(_submitBtn).attr('disabled', false);
            options.complete(jqXHR, textStatus);
    			},
    			success: function(resp, jqXHR, textStatus) {
            if ((ajaxFormHandle.dataType).toLowerCase() == 'json') {
              try{resp = JSON.parse(resp)}catch(e){}
              if(typeof resp != 'object' || Object.prototype.toString.call(resp).toLowerCase() != '[object object]') {
                showAlert('响应数据格式不正确');
                return false;
        			}
            }
    				options.success(resp, jqXHR, textStatus);
    			},
    			error:function(jqXHR, textStatus, errorThrown) {
            options.error(jqXHR, textStatus, errorThrown);
    			}
				});
			};
			if($(_submitBtn).attr('disabled')) {
				showAlert('请等待当前操作执行完毕');
				return false;
			}
      if (false === ajaxFormHandle.formCheck()) {
        return false;
      }
			if(ajaxFormHandle.confirm.noConfirm) {
				postform(ajaxFormHandle);
			} else {
				showConfirm(ajaxFormHandle.confirm, function(){
					postform(ajaxFormHandle);
				}, function(){ajaxFormHandle.confirm.cancelFunc()});
			}
			return false;
		});
	});
});
})(jQuery);

function iScrollTo(anchor, timeout) {
    var anchor = anchor || 'regtype';
    var timeout = timeout || 1.25;
    var offsetY = 0;
    switch(anchor) {
    case 'regtype':
        offsetY = $('#anchor-regtype').offset().top-10;
        break;
    case 'baseinfo':
      offsetY = $('#anchor-baseinfo').offset().top-10;
      break;
    case 'company':
      offsetY = $('#anchor-company').offset().top-10;
      break;
    case 'link':
      offsetY = $('#anchor-link').offset().top-10;
      break;
    case 'reward':
      offsetY = $('#anchor-reward').offset().top-10;
      break;
    case 'getgold':
      offsetY = $('#apply_now').offset().top-220;
      break;
    default :
      offsetY = $('#anchor-regtype').offset().top-10;
    }
    $('html, body').animate({scrollTop: offsetY}, 1000*timeout);
    $(document).mousedown(function(){$('html, body').stop()});
    try {
        document.addEventListener('DOMMouseScroll',function(){$('html, body').stop()},false);
    }catch(e){}
    try {
        document.onmousewheel = function(){$('html, body').stop()}
    }catch(e){}
}
